<?js 
var data = obj; 
?>
<dt>
    <?js 
      //[csaba] 12/9/17
      // it's not sufficient to just remove one #, there could be two
      //var propName = (name ? (name.indexOf('#') == 0 ? name.substring(1) : name) : name);
      var propName = data.alias? (data.alias.replace(/^(#)+/g, '')) : (name ? name.replace(/^(#)+/g, '') : '');
      var attrName = this.inJetComponent && !data.ojchild && !data.ojslot && !data.isSubpropOfArray && data.kind !== 'typedef' ? this.propertyNameToAttribute(propName) : propName;
      // [jim] add bookmarkable link icon: ?>
    <h4 id="<?js= id ?>" class="name">
        <?js // Works around JSDoc bug where names of doclets created with memberof! are appended with '#' ?>
        <?js= data.attribs + attrName + (data.signature ? data.signature : '') ?>
        <a class="bookmarkable-link" title="Bookmarkable Link" href="#<?js= id ?>"></a>
    </h4>
    
    <?js if (data.ojpreview) { ?>
    <p><?js= this.previewMessage ?></p>
    <?js } ?>

    <?js if (data.summary) { ?>
    <p class="summary"><?js= summary ?></p>
    <?js } ?>
</dt>
<dd>
    <?js if (data.description) { ?>
    <div class="description">
        <?js= data.description ?>
    </div>
    <?js } ?>
    
    <?js= this.partial('details.tmpl', data) ?>
    
    <?js
      // For JET components, the attr syntax is used as the doc entry title, so show the other 3 syntaxes in a table.
      // For top-level attrs, show all 3 syntaxes below.
      // For subproperties, the prop change ones are skipped below, showing only the property name.
      // For subproperties of an array-valued attr, skip the prop name too, i.e. skip the entire table,
      // since the prop name is already the main title in that special case.        
      
      if (this.inJetComponent    && 
          !data.ojchild          && 
          !data.ojslot           && 
          !data.ojnodecontext    && 
          !data.ojsubid          && 
          !data.isSubpropOfArray && 
          !this.isBindingElement &&
          data.kind !== 'typedef') { ?>
        <h5>Names</h5>
        <table class="keyboard-table">
          <thead>
            <tr>
              <th>Item</th>
              <th>Name</th>              
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>Property</td>
              <td><code class="prettyprint"><?js= propName ?></code></td>              
            </tr>
            <?js if (name.indexOf('.') == -1) { ?>
            <tr>
              <td>Property change event</td>
              <td><code class="prettyprint"><?js= propName + "Changed" ?></code></td>
            </tr>
            <tr>
              <td>Property change listener attribute (<span class="important">must be of type function</span>)</td>
              <td><code class="prettyprint"><?js= "on-" + attrName + "-changed" ?></code></td>
            </tr>
            <?js } ?>
          </tbody>
        </table>
    <?js } ?>

    <?js if (data.isSubpropOfArray) { ?>
    <div class="description">
         <b>Note: </b> This property is a subproperty of an array-valued property. <i>Such properties cannot be set individually 
         either at init time via HTML attribute syntax or at runtime via JavaScript.</i>  Instead, the outermost array-valued attribute, and its ancestor attributes, 
         can be set at init time or runtime.
    </div>
    <?js } ?>
    
    <?js if (data.examples && examples.length) { ?>
        <h5>Example<?js= examples.length > 1? 's':'' ?></h5>
        <?js= this.partial('examples.tmpl', examples) ?>
    <?js } ?>
</dd>