<?js
var data = obj;
var self = this;
var elemId;
?>
<dt>
    <?js var attribs = data.attribs.replace("virtual", "abstract"); // [jim] show abstract classes / components / members as abstract, not virtual ?>    
    <?js if (kind === 'class' && !data.hideconstructor) { // [jim] then show new "Constructor" header ?>
        <?js elemId = "constructor-section"; ?>
        <h3 id="<?js= elemId ?>">
            Constructor
            <a class="bookmarkable-link" title="Bookmarkable Link" href="#<?js= elemId ?>"></a>
        </h3>
    <?js } ?>
    <?js elemId = id; 
    //[csaba] don't display the constructor if was marked with the hideconstructor tag
    if (!data.hideconstructor){ // [jim] add bookmarkable link icon ?>    
      <h4 id="<?js= elemId ?>" class="name">
        <?js= attribs + (kind === 'class' ? 'new ' : '') + (data.fullName || name).replace(/^(#)+/g, '') + (kind !== 'event' ? data.signature : '') ?>
        <a class="bookmarkable-link" title="Bookmarkable Link" href="#<?js= elemId ?>"></a>
      </h4>
    <?js } ?>
        
    <?js if (data.ojpreview) { ?>
    <p><?js= self.previewMessage ?></p>
    <?js } ?>

    <?js if (data.summary) { ?>
    <p class="summary"><?js= summary ?></p>
    <?js } ?>
</dt>
<dd>
    
    <?js if (data.description) { ?>
    <div class="description">
        <?js= data.description ?>
    </div>
    <?js } ?>

    <?js if (kind === 'event' && data.type && data.type.names) {?>
        <h5>Type:</h5>
        <ul>
            <li>
                <?js= self.partial('type.tmpl', data.type.names) ?>
            </li>
        </ul>
    <?js } ?>
    
    <?js if (data['this']) { ?>
        <h5>This:</h5>
        <ul><li><?js= this.linkto(data['this'], data['this']) ?></li></ul>
    <?js } ?>
    
    <?js if (data.params && params.length) { ?>
        <h5>Parameters:</h5>
        <?js= this.partial('params.tmpl', params) ?>
    <?js } ?>
    
    <?js= this.partial('details.tmpl', data) ?>
    
    <?js if (data.fires && fires.length) { ?>
    <h5>Fires:</h5>
    <ul><?js fires.forEach(function(f) { ?>
        <?js= self.partial('fires.tmpl', self.linkto(f) ) ?>
    <?js }); ?></ul>
    <?js } ?>
    
    <?js if (data.exceptions && exceptions.length) { ?>
    <h5>Throws:</h5>
    <?js if (exceptions.length > 1) { ?><ul><?js
        exceptions.forEach(function(r) { ?>
            <li><?js= self.partial('exceptions.tmpl', r) ?></li>
        <?js });
    ?></ul><?js } else {
        exceptions.forEach(function(r) { ?>
            <?js= self.partial('exceptions.tmpl', r) ?>
        <?js });
    } } ?>
    
    <?js if (data.returns && returns.length) { ?>
        <h5>Returns:</h5>
        <?js if (returns.length > 1) { ?><ul><?js
            returns.forEach(function(r) { ?>
                <li><?js= self.partial('returns.tmpl', r) ?></li>
            <?js });
        ?></ul><?js } else {
            returns.forEach(function(r) {?>
                <?js= self.partial('returns.tmpl', r) ?>
            <?js });
        }
    } ?>
    
    <?js 
      // For component events, we just auto-generate examples rather than each component having to supply them.
      if (self.inJetComponent && kind === 'event') {
        var componentVarName = "my" + self.componentCamelCaseName.substring(2); // "myRowExpander"
        var eventName = data.fullName; // "ojCollapse"
        var listenerProp = "onOj" + eventName.substring(2); // "onOjCollapse"
        var listenerAttr = self.propertyNameToAttribute(listenerProp); // "on-oj-collapse"
        var defaultExamples = [
          {
            caption: 'Specify an <code class="prettyprint">' + eventName + '</code> listener via the DOM attribute:',
            code: '&lt;' + self.componentKebabCaseName + ' ' + listenerAttr + "='[[listener]]'>&lt;/" + self.componentKebabCaseName + '>'
          },
          {
            caption: 'Specify an <code class="prettyprint">' + eventName + '</code> listener via the JavaScript property:',
            code: componentVarName + '.' + listenerProp + ' = listener;'
          },
          {
            caption: 'Add an <code class="prettyprint">' + eventName + '</code> listener via the <code class="prettyprint">addEventListener</code> API:',
            code: componentVarName + ".addEventListener('" + eventName + "', listener);"
          }
        ];
        if (data.examples && data.examples.length) {              
          data.examples = data.examples.concat(defaultExamples);
        }
        else{
          data.examples = defaultExamples;
        }
      }      
      if (data.examples && data.examples.length) { // data. ?>
        <h5>Example<?js= data.examples.length > 1? 's':'' ?></h5>
        <?js= this.partial('examples.tmpl', data.examples) ?>
    <?js } ?>
</dd>
